package design_pattern.adapter.adapter12

fun main() {
    // Managing Windows platform windows
    val windowsWindow: Window = WindowsAdapter(WindowsWindowSystem())
    windowsWindow.openWindow()  // Output: Opening a window on Windows...
    windowsWindow.closeWindow() // Output: Closing a window on Windows...

    // Managing macOS platform windows
    val macWindow: Window = MacOSAdapter(MacOSWindowSystem())
    macWindow.openWindow()  // Output: Opening a window on macOS...
    macWindow.closeWindow() // Output: Closing a window on macOS...

    // Managing Linux platform windows
    val linuxWindow: Window = LinuxAdapter(LinuxWindowSystem())
    linuxWindow.openWindow()  // Output: Opening a window on Linux...
    linuxWindow.closeWindow() // Output: Closing a window on Linux...
}